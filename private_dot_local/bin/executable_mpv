#!/usr/bin/env bash
# launches mpv with a unique mpv socket at /tmp/mpvsockets
# can set the MPV_SOCKET_DIR environment variable to override the location
# https://github.com/seanbreckenridge/mpv-sockets

declare socket_dir mpv_loc default_tmp_dir default_socket_dir
declare -a mpv_possible_paths mpv_options

default_tmp_dir="${TMPDIR:-/tmp}"
default_socket_dir="${default_tmp_dir}/mpvsockets"

socket_dir="${MPV_SOCKET_DIR:-${default_socket_dir}}"

mpv_possible_paths=()
[[ -n "${MPV_PATH}" ]] && mpv_possible_paths+=("${MPV_PATH}")
# fallbacks if MPV_PATH wasn't set
mpv_possible_paths+=('/usr/bin/mpv' '/bin/mpv' '/usr/local/bin/mpv')

# try common paths to find the mpv binary
for pos in "${mpv_possible_paths[@]}"; do
	if [[ -e "${pos}" ]]; then
		mpv_loc="${pos}"
		break
	fi
done

[[ -z "${mpv_loc}" ]] && {
	# if mpv_loc isn't set here, none of the fallbacks worked. If the user
	# set the MPV_PATH variable, we should warn them that no binary exists there
	if [[ -n "${MPV_PATH}" ]]; then
		printf 'Error: could not find mpv at "%s"\n' "${MPV_PATH}" >&2
	fi
	echo 'Could not find the mpv binary at common locations' >&2
	echo 'Set the MPV_PATH environment variable to the absolute path of mpv' >&2
	exit 1
}

# done with configuration
readonly mpv_loc socket_dir

# make sockets directory
mkdir -p "${socket_dir}" || exit $?

# exec mpv, with the --input-ipc-server flag, using epoch nanoseconds
# to guarantee unique ipc sockets
declare -a mpv_options
mpv_options=(--input-ipc-server="${socket_dir}/$(date +%s%N)")
mpv_options+=("$@")

exec "${mpv_loc}" "${mpv_options[@]}"
